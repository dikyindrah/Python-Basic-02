Catatan:

Membuat, Mengubah, dan Menghapus Tabel Dengan mysql-connector

Dengan mysql-connector kita bisa melakukan beberapa
hal seperti Membuat, Mengubah, dan Menghapus Tabel
yang ada pada database.

Sebelum membuat tabel, kita harus mendefinisikan 
skema dari database yang akan kita buat seperti
nama database, nama tabel, nama kolom, tipe data, 
dan panjang data. Sebagai contoh, sebelumnya kita 
telah membuat database "db_rating_film_online" 
dan selanjutnya kita akan mendefinisikan sekema
dari database tersebut.

Kita bisa mulai dengan mendefinisikan sekema
database untuk sistem rating film online
menggunakan tiga tabel:

1. tbl_movies

Berisi informasi umum tentang film, tabel ini 
memiliki beberapa atribut, yaitu:

[-] id_movie (Primary Key)
[-] title 
[-] release_year
[-] genre
[-] collection_in_mil

2. tbl_reviewers

Berisi informasi tentang orang-orang yang memposting 
ulasan atau penilaian, tabel ini memiliki beberapa 
atribut, yaitu:

[-] id_reviewer (Primary Key)
[-] first_name
[-] last_name

3. tbl_ratings

Berisi informasi tentang rating yang telah diposting
tabel ini memiliki beberapa atribut, yaitu:

[-] id_film (Foreign Key)
[-] id_reviewers (Foreign Key)
[-] rating


Membuat Tabel

Untuk membuat tabel kita bia menggunakan query SQL
"CREATE TABLE nama_tabel". 

Contoh:

import mysql.connector 
from mysql.connector import Error

try:
    with mysql.connector.connect(
        host = 'localhost',
        database = 'db_online_movie_rating',
        username = 'root',
        password = ''
    ) as db_online_movie_rating:
        # Mendefinisikan query untuk membuat tbl_movies.
        create_tbl_movies = """
        CREATE TABLE tbl_movies (
            movie_id INT AUTO_INCREMENT PRIMARY KEY,
            title VARCHAR(100),
            release_year YEAR(4),
            genre VARCHAR (100),
            collection_in_mil INT
        )
        """

        # Mendefinisikan query untuk membuat tbl_reviewers.
        create_tbl_reviewers = """
        CREATE TABLE tbl_reviewers (
            reviewer_id INT AUTO_INCREMENT PRIMARY KEY,
            first_name VARCHAR(100),
            last_name VARCHAR(100)
            )
        """

        # Mendefinisikan query untuk membuat tbl_ratings 
        create_tbl_ratings = """
        CREATE TABLE tbl_ratings (
            movie_id INT,
            reviewer_id INT,
            rating DECIMAL(2,1),
            FOREIGN KEY(movie_id) REFERENCES tbl_movies(movie_id),
            FOREIGN KEY(reviewer_id) REFERENCES tbl_reviewers(reviewer_id)
        )
        """

        # Mendefinisikan query untuk menampilkan struktur tabel
        show_tbl_movies = 'DESCRIBE tbl_movies'
        show_tbl_reviewers = 'DESCRIBE tbl_reviewers'
        show_tbl_ratings = 'DESCRIBE tbl_ratings'

        if db_online_movie_rating.is_connected():
            print('Koneksi berhasil')

            # Mengeksekusi query yang telah dibuat
            with db_online_movie_rating.cursor() as cursor:
                cursor.execute(create_tbl_movies)
                cursor.execute(create_tbl_reviewers)
                cursor.execute(create_tbl_ratings)
                db_online_movie_rating.commit()
        
        # Menampilkan tabel yang berhasil dibuat
        print('Tabel berhasil dibuat\n')
        with db_online_movie_rating.cursor() as cursor:
            print('tbl_movies:')
            cursor.execute(show_tbl_movies)
            tbl_movies = cursor.fetchall()
            for row in tbl_movies:
                print(row)
            
            print('\ntbl_reviewers:')
            cursor.execute(show_tbl_reviewers)
            tbl_reviewers = cursor.fetchall()
            for row in tbl_reviewers:
                print(row)

            print('\ntbl_ratings:')
            cursor.execute(show_tbl_ratings)
            tbl_ratings = cursor.fetchall()
            for row in tbl_ratings:
                print(row)
except Error as e:
    print(f"Koneksi gagal, Error: {e}")
    print('Gagal membuat tabel')


Ouput:

Koneksi berhasil
Tabel berhasil dibuat

tbl_movies:
('movie_id', 'int(11)', 'NO', 'PRI', None, 'auto_increment')
('title', 'varchar(100)', 'YES', '', None, '')
('release_year', 'year(4)', 'YES', '', None, '')
('genre', 'varchar(100)', 'YES', '', None, '')
('collection_in_mil', 'int(11)', 'YES', '', None, '')

tbl_reviewers:
('reviewer_id', 'int(11)', 'NO', 'PRI', None, 'auto_increment')
('first_name', 'varchar(100)', 'YES', '', None, '')
('last_name', 'varchar(100)', 'YES', '', None, '')

tbl_ratings:
('movie_id', 'int(11)', 'YES', 'MUL', None, '')
('reviewer_id', 'int(11)', 'YES', 'MUL', None, '')
('rating', 'decimal(2,1)', 'YES', '', None, '')


Referensi:

1.  https://realpython.com/python-mysql/