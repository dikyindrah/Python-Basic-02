Catatan:

RegEx Functions

Modul re pada python menawarkan sejumlah method atau fungsi
yang bisa kita gunakan untuk mencari string. 


findall()

findall() mengembalikan string yang cocok dalam bentuk list.
Jika string yang sesuai atau cocok dengan pola ditemukan maka 
akan mengembalikan objek match dalam bentuk list dan jika tidak 
ditemukan maka akan mengembalikan nilai None.

Contoh:

import re

# findall()
f_teks = '27 November 1999'

f_pola = '\d+'
f_hasil = re.findall(f_pola, f_teks)
print(f_hasil)


Output:

['27', '1999']


search()

Method search() mencari lokasi pertama di mana pola RegEx 
menghasilkan kecocokan dengan string. Jika string yang sesuai 
atau cocok dengan pola ditemukan maka akan mengembalikan 
objek match dan jika tidak ditemukan maka akan mengembalikan 
nilai None.

Contoh:

# search()
sh_teks_1 = 'python adalah bahasa pemrograman yang mudah untuk digunakan'
sh_teks_2 = 'nomor whatsapp : 082112345678'

sh_pola_1 = 'pemrograman'
sh_pola_2 = '\d\d\d\d\d\d\d\d\d\d\d\d'

sh_hasil_1 = re.search(sh_pola_1, sh_teks_1)
sh_hasil_2 = re.search(sh_pola_2, sh_teks_2)

print(sh_hasil_1)
print(sh_hasil_2)


Output:

<re.Match object; span=(20, 26), match='python'>
<re.Match object; span=(17, 29), match='082112345678'>


Kita bisa menggunakan sejumlah method untuk mengolah objek 
match yang di hasilkan dari method search(). Beberapa
yang umum digunakan diantaranya.

group()

Method group() mengembalikan bagian dari string yang cocok
dengan pola. 

Contoh:

# group
print(sh_hasil_2.group())


Output:

082112345678


start(), end(), dan span()

Method start() mengembalikan indeks awal dari objek match
pada string dan method end() mengembalikan indeks akhir dari 
objek match pada string.

Contoh:

# start(), end(), dan span()
print('teks = {}'.format(sh_teks_1))
print('panjang teks = {}'.format(len(sh_teks_1)))
print('teks yang dicari = {}'.format(sh_hasil_1.group()))
print('teks {} ditemukan pada rentang indeks {} sampai {}'.format(sh_hasil_1.group(), sh_hasil_1.start(), sh_hasil_1.end()))
print(sh_hasil_1.span())


Output:

teks = python adalah bahasa pemrograman yang mudah untuk digunakan
panjang teks = 59
teks yang dicari = pemrograman
teks pemrograman ditemukan pada rentang indeks 21 sampai 32


Method span() mengembalikan tuple yang berisi indeks awal dan 
akhir dari objek match pada string.

Contoh:

print(sh_hasil_1.span())


Output:

(21, 32)


re dan string

Atribut re mengembalikan pola yang digunakan pada objek match
dari method search() dan atribut string mengembalikan string 
yang diteruskan pada method search().

Contoh:

# re dan string
print(sh_hasil_2.re)
print(sh_hasil_2.string)

Output:

re.compile('\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d')
nomor whatsapp : 082112345678


split()

Method split() membagi objek match dan mengembalikannya 
dalam bentuk list. Jika string yang sesuai atau cocok 
dengan pola ditemukan maka akan mengembalikan objek match 
dalam bentuk list dan jika tidak ditemukan maka akan 
mengembalikan list berisi string asli.

Contoh:

# split()
st_teks_1 = 'hari ini hujan'
st_teks_2 = '123-456-789-101'

st_pola_1 = '\s'
st_pola_2 = r'\D'

st_hasil_1 = re.split(st_pola_1, st_teks_1)
st_hasil_2 = re.split(st_pola_2, st_teks_2)

print(st_hasil_1)
print(st_hasil_2)


Output:

['hari', 'ini', 'hujan']
['123', '456', '789', '101']


Kita juga bisa menambahkan maxsplit untuk menentukan
jumlah maksimum objek match yang bisa di bagi atau 
dipecah menjadi beberapa bagian.

Contoh:

# Maxsplit = 1
st_hasil_3 = re.split(st_pola_2, st_teks_2, 1)

# Maxsplit = 2 
st_hasil_4 = re.split(st_pola_2, st_teks_2, 2)

print(st_hasil_3)
print(st_hasil_4)


Output:

['123', '456-789-101']
['123', '456', '789-101']


Karena indeks pada list dimulai dari 0, maka jika kita
mendefinisikan maxsplit sama dengan 1 maka objek match
akan dipecah menajdi dua bagian, karena indeksnya 0, 1.



Referensi:

1.  https://www.pythonindo.com/regular-expression/
2.  https://www.programiz.com/python-programming/regex
3.  https://www.w3schools.com/python/python_regex.asp